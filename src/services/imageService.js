import { createCanvas, loadImage } from "canvas";
import path from "path";
import fs from "fs/promises";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

class ImageService {
  constructor() {
    this.cacheDir = path.join(__dirname, "..", "cache");
    this.imagePath = path.join(this.cacheDir, "summary.png");
  }
  async ensureCacheDirectory() {
    try {
      await fs.access(this.cacheDir);
    } catch (error) {
      await fs.mkdir(this.cacheDir, { recursive: true });
    }
  }

  async generateSummaryImage(totalCountries, topCountries, refreshTimestamp) {
    await this.ensureCacheDirectory();
    const width = 800;
    const height = 600;
    const canvas = createCanvas(width, height);
    const ctx = canvas.getContext("2d");
    // const image = await loadImage(path.join(__dirname, "..", "assets", "logo.png"));

    ctx.fillStyle = "#2c3e50";
    ctx.font = "bold 32px sans-serif";
    ctx.textAlign = "center";
    ctx.fillText("Country API Summary", width / 2, 60);

    ctx.fillStyle = "#34495e";
    ctx.font = "24px sans-serif";
    ctx.textAlign = "left";
    ctx.fillText(`Total Countries: ${totalCountries}`, 50, 120);

    ctx.fillText(
      `Last Refresh: ${new Date(refreshTimestamp).toLocaleString()}`,
      50,
      160
    );

    ctx.fillStyle = "#2c3e50";
    ctx.font = "bold 20px sans-serif";
    ctx.fillText("Top 5 Countries by Estimated GDP:", 50, 220);

    ctx.fillStyle = "#34495e";
    ctx.font = "16px sans-serif";

    topCountries.forEach((country, index) => {
      const yPos = 260 + index * 30;
      const gdpFormatted = new Intl.NumberFormat("en-US", {
        style: "currency",
        currency: "USD",
        minimumFractionDigits: 0,
        maximumFractionDigits: 0,
      }).format(country.estimated_gdp || 0);
      ctx.fillText(`${index + 1}. ${country.name}: ${gdpFormatted}`, 70, yPos);
    });

    ctx.fillStyle = "#7f8c8d";
    ctx.font = "12px sans-serif";
    ctx.textAlign = "center";
    ctx.fillText("Generated by Country API", width / 2, height - 20);

    const buffer = canvas.toBuffer("image/png");
    await fs.writeFile(this.imagePath, buffer);

    return this.imagePath;
  }

  async getImagePath() {
    try {
      await fs.access(this.imagePath);
      return this.imagePath;
    } catch (error) {
      return null;
    }
  }
}

export default new ImageService();
